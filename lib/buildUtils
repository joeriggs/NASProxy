################################################################################
# Utility functions that are useful when building the NAS Proxy.
################################################################################

readonly BUILD_CONF_FILE=${TOP_DIR}/build.conf

################################################################################
# Check for the specified CentOS package.  If it's not installed, install it.
#
# Input:
#   PKG_NAME is the name of the package (in YUM).
#
# Output:
#   Returns if success.
#
#   Prints an error message and exits if failure.
################################################################################
installYUMPackage() {
	local PKG_NAME=${1}

	echo -n "    Check for ${PKG_NAME} ... "
	sudo yum list installed | grep -q ${PKG_NAME} &> ${LOG}
	if [ $? -eq 0 ]; then
		printResult ${RESULT_PASS}
	else
		printResult ${RESULT_WARN} "Missing.\n"

		echo -n "      Install .. "
		sudo yum install -y ${PKG_NAME} &> ${LOG}
		[ $? -ne 0 ] && printResult ${RESULT_FAIL} && exit 1 ; printResult ${RESULT_PASS}
	fi
}

################################################################################
# Write a brand new copy of the config file.
#
# Input:
#   All of the variables are set to their requested values.
#
# Output:
#   0 = success.
#   1 = failure.
################################################################################
writeBuildConfigFile() {
	echo -n "Saving the build configuration file ... "

	cat > ${BUILD_CONF_FILE} << EOF
export ESXI_IP=${ESXI_IP}
export ESXI_USERNAME=${ESXI_USERNAME}
export ESXI_PASSWORD=${ESXI_PASSWORD}
EOF

	[ $? -ne 0 ] && printResult ${RESULT_FAIL} ; printResult ${RESULT_PASS}
	read -p "Press <ENTER> to continue."
}

################################################################################
# Load the existing build configuration.  This function knows which build
# environment variables should get loaded.  So it can look through and make sure
# they all loaded.  If anything is missing, this function will ask the user for
# a value.
################################################################################
loadBuildConfigFile() {
	echo    "Prepare config file (${BUILD_CONF_FILE}):"
	echo -n "  Look for config file (${BUILD_CONF_FILE}) ... "
	if [ -f ${BUILD_CONF_FILE} ]; then
		echo "Found."
		. ${BUILD_CONF_FILE}
	else
		echo "Missing."
		echo -n "  Create empty config file ... "
		touch ${BUILD_CONF_FILE}
		[ $? -ne 0 ] && echo "Fail." && exit 1 ; echo "Pass."
	fi

	# Make sure everything is defined.
	WRITE_FILE=0

	# ESXi server.
	if [ -z "${ESXI_IP}" ] || [ -z "${ESXI_USERNAME}" ] || [ -z "${ESXI_PASSWORD}" ]; then
		read -p "    ESXi server IP Address: [${ESXI_IP}] "
		ESXI_IP=${REPLY}
		read -p "    ESXi server username:   [${ESXI_USERNAME}] "
		ESXI_USERNAME=${REPLY}
		read -p "    ESXi server password:   [${ESXI_PASSWORD}] "
		ESXI_PASSWORD=${REPLY}
		WRITE_FILE=1
	fi

	# If the user changed anything, write it back out.
	[ ${WRITE_FILE} -eq 1 ] && writeConfigFile
}

