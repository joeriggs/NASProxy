
################################################################################
# Determine the version of RHEL that is running on this computer.  You can run
# this library on the build and/or production computers.
################################################################################

RHEL_MAJOR_VERSION=0
RHEL_MINOR_VERSION=0 

################################################################################
# Load RHEL_MAJOR_VERSION and RHEL_MINOR_VERSION.
#
# Input:
#   LOG_FILE    = The name of the utility's log file.
#
#   VEBOSE      = 1 if we should log progress to the console.
#
# Output:
#   Success - Returns to the caller.
#
#   Failure - Automatically exits the entire shell script.
################################################################################
rhelVersionInit() {
	local LOG_FILE=${1}
	local VERBOSE=${2}

	echo -n "Get the local RedHat version ... "
	[ ! -f /etc/redhat-release ] && printResult ${RESULT_FAIL} "/etc/redhat-release missing.\n" && return 1
	grep -q "release 8" /etc/redhat-release && RHEL_MAJOR_VERSION=8
	grep -q "release 7" /etc/redhat-release && RHEL_MAJOR_VERSION=7
	grep -q "release 6" /etc/redhat-release && RHEL_MAJOR_VERSION=6
	grep -q "release 5" /etc/redhat-release && RHEL_MAJOR_VERSION=5
	[ ${RHEL_MAJOR_VERSION} -eq 0 ] && printResult ${RESULT_FAIL} "Can't find RHEL Major Version.\n" && return 1

	case ${RHEL_MAJOR_VERSION} in 
	"5") printResult ${RESULT_FAIL} "Version 5 not supported.\n" ;;
	"6") printResult ${RESULT_FAIL} "Version 6 not supported.\n" ;;
	"7") RHEL_MINOR_VERSION=`cat /etc/redhat-release | awk {'print $4'} | sed -e "s/\./ /g;" | awk {'print $2'}` ;;
	"8") RHEL_MINOR_VERSION=`cat /etc/redhat-release | awk {'print $4'} | sed -e "s/\./ /g;" | awk {'print $2'}` ;;
	esac
	[ "${RHEL_MINOR_VERSION}" == "0" ] && printResult ${RESULT_WARN} "Can't find RHEL Minor Version.\n"

	printResult ${RESULT_PASS} "Pass (MAJOR ${RHEL_MAJOR_VERSION} : MINOR ${RHEL_MINOR_VERSION}).\n"
	readonly RHEL_MAJOR_VERSION RHEL_MINOR_VERSION
}

