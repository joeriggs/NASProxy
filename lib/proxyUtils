################################################################################
# A library of functions/macros that are used to configure proxy entries.
################################################################################

################################################################################
# Perform common initialization that is necessary in order to use this library.
#
# Input:
#   LOG_FILE    = The name of the utility's log file.
#
#   VERBOSE     = Display console output.
#
# Output:
#   0 - Success.
#   1 - Failure.
################################################################################
proxyInitialization() {
	local LOG_FILE=${1}
	local VERBOSE=${2}

	local RETCODE=0

	return ${RETCODE}
}

################################################################################
# Collect information from the user in order to create a new proxy entry.
################################################################################
proxyAddEntry() {
	local RETCODE=0

	echo ""
	echo "Add new proxy entry."
	echo ""

	read -p "  Server IP Address [${SERVER_IP_ADDR}]: "
	SERVER_IP_ADDR=${REPLY:-${SERVER_IP_ADDR}}

	read -p "  Export path [${EXPORT_PATH}]: "
	EXPORT_PATH=${REPLY:-${EXPORT_PATH}}

	read -p "  Local mount point [${LOCAL_MOUNT_POINT}]: "
	LOCAL_MOUNT_POINT=${REPLY:-${LOCAL_MOUNT_POINT}}

	read -p "  Export directory [${LOCAL_EXPORT_DIR}]: "
	LOCAL_EXPORT_DIR=${REPLY:-${LOCAL_EXPORT_DIR}}

	echo ""
	echo "Proxy path:"
	echo "  ${LOCAL_EXPORT_DIR} -> ${LOCAL_MOUNT_POINT} -> ${SERVER_IP_ADDR}:${EXPORT_PATH}"
	echo ""

	# Ping the NFS Server to make sure we can reach it.
	echo    "Verify server information:"
	echo -n "  Ping server ... "
	ping -c 4 ${SERVER_IP_ADDR} &> ${LOG}
	if [ $? -ne 0 ]; then
		printResult ${RESULT_FAIL}
		RETCODE=1
	else
		printResult ${RESULT_PASS}
	fi

	# Check the server's exported directory.
	if [ ${RETCODE} -eq 0 ]; then
		echo -n "  Look for \"${EXPORT_PATH}\" on ${SERVER_IP_ADDR} ... "
		/usr/sbin/showmount -e ${SERVER_IP_ADDR} &> ${LOG}
		if [ $? -ne 0 ]; then
			printResult ${RESULT_FAIL}
			RETCODE=1
		else
			grep -q "^${EXPORT_PATH} " ${LOG}
			if [ $? -ne 0 ]; then
				printResult ${RESULT_FAIL} "Not found.\n"
				RETCODE=1
			else
				printResult ${RESULT_PASS}
			fi
		fi
	fi

	# Check the requested local mount point.
	# 1. Make sure it doesn't already exist.
	# 2. Then create it.
	if [ ${RETCODE} -eq 0 ]; then
		echo -n "  Create mount point ... "

		# Does it already exist?
		if [ -e ${LOCAL_MOUNT_POINT} ]; then
			printResult ${RESULT_FAIL} "Already exists.\n"
			RETCODE=1
		else
			# Create it.
			sudo mkdir -p ${LOCAL_MOUNT_POINT} &> ${LOG}
			if [ $? -ne 0 ]; then
				printResult ${RESULT_FAIL} "Cannot create.\n"
				RETCODE=1
			else
				sudo chmod 777 ${LOCAL_MOUNT_POINT} &> ${LOG}
				if [ $? -ne 0 ]; then
					printResult ${RESULT_FAIL} "Cannot chmod.\n"
					RETCODE=1
				else
					printResult ${RESULT_PASS}
				fi
			fi
		fi
	fi

	# Mount the user-specified remote directory onto the newly-created
	# mount point.
	if [ ${RETCODE} -eq 0 ]; then
		echo -n "  Mount ... "
		sudo mount ${SERVER_IP_ADDR}:${EXPORT_PATH} ${LOCAL_MOUNT_POINT} &> ${LOG}
		if [ $? -ne 0 ]; then
			printResult ${RESULT_FAIL}
			RETCODE=1
		else
			printResult ${RESULT_PASS}
		fi
	fi

	# Check the requested local export directory.
	# 1. Make sure it doesn't already exist.
	# 2. Then create it.
	if [ ${RETCODE} -eq 0 ]; then
		echo -n "  Create export dir ... "

		# Does it already exist?
		if [ -e ${LOCAL_EXPORT_DIR} ]; then
			printResult ${RESULT_FAIL} "Already exists.\n"
			RETCODE=1
		else
			# Create it.
			sudo mkdir -p ${LOCAL_EXPORT_DIR} &> ${LOG}
			if [ $? -ne 0 ]; then
				printResult ${RESULT_FAIL} "Cannot create.\n"
				RETCODE=1
			else
				sudo chmod 777 ${LOCAL_EXPORT_DIR} &> ${LOG}
				if [ $? -ne 0 ]; then
					printResult ${RESULT_FAIL} "Cannot chmod.\n"
					RETCODE=1
				else
					printResult ${RESULT_PASS}
				fi
			fi
		fi
	fi

	# Insert the NAS Proxy bridge driver (a.k.a. "The Secret Sauce").
	if [ ${RETCODE} -eq 0 ]; then
		echo -n "  Start bridge ... "
		PROXY_BRIDGE_DST=${LOCAL_MOUNT_POINT} /usr/local/bin/proxy_bridge ${LOCAL_EXPORT_DIR} &> ${LOG}
		if [ $? -ne 0 ]; then
			printResult ${RESULT_FAIL}
			RETCODE=1
		else
			printResult ${RESULT_PASS}
		fi
	fi

	# Export the export dir.
	if [ ${RETCODE} -eq 0 ]; then
		echo -n "  Export ${LOCAL_EXPORT_DIR} via NFSD ... "

		# Is it already exported, for some strange reason?
		cat /proc/fs/nfs/exports | grep -qP "^${LOCAL_EXPORT_DIR}\t" &> ${LOG}
		if [ $? -eq 0 ]; then
			printResult ${RESULT_FAIL} "${LOCAL_EXPORT_DIR} is already exported.\n"
			RETCODE=1
		else
			# Export it.
			sudo exportfs -o rw,fsid=0 *:${LOCAL_EXPORT_DIR} &> ${LOG}
			if [ $? -ne 0 ]; then
				printResult ${RESULT_FAIL}
				RETCODE=1
			else
				printResult ${RESULT_PASS}
			fi
		fi
	fi

	##########
	# Done.
	echo ""
	if [ ${RETCODE} -eq 0 ]; then
		printResult ${RESULT_PASS} "Success.\n"
	else
		printResult ${RESULT_FAIL} "Failure.\n"
	fi

	echo ""

	return ${RETCODE}
}

